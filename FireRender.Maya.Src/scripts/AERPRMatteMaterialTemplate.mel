//
// Copyright 2020 Advanced Micro Devices, Inc
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//    http://www.apache.org/licenses/LICENSE-2.0
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

global proc AEMatteCheckEnableSC(string $nodeName)
{
	string $nodeAttr = $nodeName + ".scenabled";
	int $value = `getAttr $nodeAttr`;

	editorTemplate -dimControl $nodeName "bgIsEnv" ($value == 0);
	editorTemplate -dimControl $nodeName "shadowColor" ($value == 0);
	editorTemplate -dimControl $nodeName "shadowWeight" ($value == 0);
	editorTemplate -dimControl $nodeName "shadowTransp" ($value == 0);
	editorTemplate -dimControl $nodeName "useNormalMap" ($value == 0);
	editorTemplate -dimControl $nodeName "normalMap" ($value == 0);
	editorTemplate -dimControl $nodeName "useDispMap" ($value == 0);
	editorTemplate -dimControl $nodeName "dispMap" ($value == 0);

	setAttr RadeonProRenderGlobals.aovShadowCatcher ($value);

	int $isShadowCatcher = `getAttr RadeonProRenderGlobals.aovShadowCatcher`;
	if ($isShadowCatcher == 1)
	{
		// Set aovs to ON state
		setAttr RadeonProRenderGlobals.aovMattePass 1;
	}
}

global proc AEMatteCheckEnableRC(string $nodeName)
{
	string $nodeAttr = $nodeName + ".rcenabled";
	int $value = `getAttr $nodeAttr`;

	editorTemplate -dimControl $nodeName "bgWeight" ($value == 0);
	editorTemplate -dimControl $nodeName "bgColor" ($value == 0);
	editorTemplate -dimControl $nodeName "bgTransparency" ($value == 0);
	editorTemplate -dimControl $nodeName "reflectionRoughness" ($value == 0);
	editorTemplate -dimControl $nodeName "reflectionWeight" ($value == 0);

	setAttr RadeonProRenderGlobals.aovReflectionCatcher ($value);

	int $isReflectionCatcher = `getAttr RadeonProRenderGlobals.aovReflectionCatcher`;
	if ($isReflectionCatcher == 1)
	{
		// Set aovs to ON state
		setAttr RadeonProRenderGlobals.aovBackground 1;
		setAttr RadeonProRenderGlobals.aovOpacity 1;
		
		// Disable IBL visibility
		setAttr RadeonProRenderGlobals.displayIBL 0;
	}
	else
	{
		// Enable IBL visibility
		setAttr RadeonProRenderGlobals.displayIBL -lock 0;
		setAttr RadeonProRenderGlobals.displayIBL 1;
	}
	
}

global proc AERPRMatteMaterialTemplate( string $nodeName )
{
	AEswatchDisplay $nodeName;
	editorTemplate -beginScrollLayout;

	editorTemplate -beginLayout "Swatch properties" -collapse true;
		editorTemplate -l "Disable" -addControl "disableSwatch";
		editorTemplate -l "Iterations" -addControl "swatchIterations";
	editorTemplate -endLayout;

	editorTemplate -beginLayout "Shadow Catcher Attributes" -collapse 0;
		editorTemplate -label "Enable" -addControl "scenabled" "AEMatteCheckEnableSC";

		editorTemplate -l "Background is Environment" -addControl "bgIsEnv";

		editorTemplate -l "Shadow color" -addControl "shadowColor";
		editorTemplate -l "Shadow weight" -addControl "shadowWeight";
		editorTemplate -l "Shadow transparency" -addControl "shadowTransp";

		editorTemplate -l "Use normal map" -addControl "useNormalMap";
		editorTemplate -l "Normal map" -addControl "normalMap";
		editorTemplate -l "Use displacement map" -addControl "useDispMap";
		editorTemplate -l "Displacement map" -addControl "dispMap";
	editorTemplate -endLayout;

	editorTemplate -beginLayout "Reflection Catcher Attributes" -collapse 0;
		editorTemplate -label "Enable" -addControl "rcenabled" "AEMatteCheckEnableRC";

		editorTemplate -l "Reflection roughness" -addControl "reflectionRoughness";
		editorTemplate -l "Reflection weight" -addControl "reflectionWeight";
		
		editorTemplate -l "Background weight" -addControl "bgWeight";
		editorTemplate -l "Background color" -addControl "bgColor";
		editorTemplate -l "Background transparency" -addControl "bgTransparency";
	editorTemplate -endLayout;

	AEdependNodeTemplate $nodeName;
	
	editorTemplate -addExtraControls;
	editorTemplate -endScrollLayout;
}